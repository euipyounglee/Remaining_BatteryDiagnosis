<UserControl 
	x:Class="BatteryDashBoard.View.DeviceSettingPopup"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:BatteryDashBoard.View"
	xmlns:custom="clr-namespace:BatteryDashBoard.View.Custom"
    mc:Ignorable="d" 
	UseLayoutRounding="True"
	SnapsToDevicePixels="True"
    d:DesignHeight="400" d:DesignWidth="600">
	
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="23"/>
			<RowDefinition Height="18"/>
			<RowDefinition Height="1"/>
			<RowDefinition Height="41"/>
			<RowDefinition />
			<RowDefinition Height="40"/>
			<RowDefinition Height="40"/>
		</Grid.RowDefinitions>

		<!--<TextBlock Style="{StaticResource PopupTitleTextStyle}" Text="장비연결상태"/>-->
		<Rectangle Grid.Row="2" Fill="#868686"/>

		<Border Grid.Row="4" Padding="20,0,20,0">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="0"/>
					<RowDefinition MaxHeight="40"/>
					<RowDefinition Height="5"/>
					<RowDefinition MaxHeight="40"/>
					<RowDefinition Height="5"/>
					<RowDefinition MaxHeight="40"/>
					<RowDefinition Height="5"/>
					<RowDefinition MaxHeight="40"/>
					<RowDefinition Height="5"/>
					<RowDefinition MaxHeight="40"/>
					<RowDefinition Height="5"/>
					<RowDefinition MaxHeight="40"/>
					<RowDefinition Height="5"/>
					<RowDefinition MaxHeight="40"/>
					<RowDefinition Height="0"/>
				</Grid.RowDefinitions>

				<!-- bi box -->
				<Grid Grid.Row="1">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="40"/>
						<ColumnDefinition Width="110"/>
						<ColumnDefinition Width="10"/>
						<ColumnDefinition/>
						<ColumnDefinition Width="10"/>
						<ColumnDefinition Width="60"/>
						<ColumnDefinition Width="10"/>
						<ColumnDefinition Width="80"/>
					</Grid.ColumnDefinitions>

					<!--<custom:ConnectionStateEllipse IsOpened="{Binding Path=IsACIROpened}"/>-->
					<TextBlock Grid.Column="1"  Text="ACIR"/>
					<TextBox Grid.Column="3" Text="{Binding Path=ChannelConfig.ACIRHostInfo.Host}">
						<TextBox.Style>
							<Style TargetType="{x:Type TextBox}" >
								<Setter Property="IsEnabled" Value="False"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding Path=IsACIROpened}">
										<!--<DataTrigger.Value>
											<bldef:ConnectionStates>Disconnected</bldef:ConnectionStates>
										</DataTrigger.Value>-->
										<Setter Property="IsEnabled" Value="True"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBox.Style>
					</TextBox>
					<TextBox Grid.Column="5" Text="{Binding Path=ChannelConfig.ACIRHostInfo.Port}" PreviewTextInput="TextBox_PreviewTextInput">
						<!--<TextBox.Style>
							<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DeviceSettingPopupTextBoxStyle}">
								<Setter Property="IsEnabled" Value="False"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding Path=IsACIROpened}">
										<DataTrigger.Value>
											<bldef:ConnectionStates>Disconnected</bldef:ConnectionStates>
										</DataTrigger.Value>
										<Setter Property="IsEnabled" Value="True"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBox.Style>-->
					</TextBox>
					<!--<custom:ConnectionStateButton Grid.Column="7" IsOpened="{Binding Path=IsACIROpened}">
						<custom:ConnectionStateButton.InputBindings>
							<MouseBinding MouseAction="LeftClick" Command="{Binding Path=ACIROpenCommand}"/>
						</custom:ConnectionStateButton.InputBindings>
					</custom:ConnectionStateButton>-->
				</Grid>

				<!-- pne cts -->
				<Grid Grid.Row="3">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="40"/>
						<ColumnDefinition Width="110"/>
						<ColumnDefinition Width="10"/>
						<ColumnDefinition/>
						<ColumnDefinition Width="10"/>
						<ColumnDefinition Width="80"/>
					</Grid.ColumnDefinitions>

					<!--<custom:ConnectionStateEllipse IsOpened="{Binding Path=IsPNECTSOpened}"/>-->
					<TextBlock Grid.Column="1"  Text="PNE CTS"/>

					<!--<custom:ConnectionStateButton Grid.Column="5" IsOpened="{Binding Path=IsPNECTSOpened}">
						<custom:ConnectionStateButton.InputBindings>
							<MouseBinding MouseAction="LeftClick" Command="{Binding Path=PNECTSOpenCommand}"/>
						</custom:ConnectionStateButton.InputBindings>
					</custom:ConnectionStateButton>-->
				</Grid>

				<!-- relay box controller -->
				<Grid Grid.Row="5">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="40"/>
						<ColumnDefinition Width="110"/>
						<ColumnDefinition Width="10"/>
						<ColumnDefinition/>
						<ColumnDefinition Width="10"/>
						<ColumnDefinition Width="80"/>
					</Grid.ColumnDefinitions>

					<!--<custom:ConnectionStateEllipse IsOpened="{Binding Path=IsRelayBoxOpened}"/>-->
					<TextBlock Grid.Column="1" Style="{StaticResource DeviceSettingPopupTextStyle}" Text="Relay Controller"/>
					<TextBox Grid.Column="3" Text="{Binding Path=ChannelConfig.RelayControllerComPort, UpdateSourceTrigger=PropertyChanged}">
						<TextBox.Style>
							<Style TargetType="{x:Type TextBox}"  >
								<Setter Property="IsEnabled" Value="False"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding Path=IsRelayBoxOpened}">
										<!--<DataTrigger.Value>
											<bldef:ConnectionStates>Disconnected</bldef:ConnectionStates>
										</DataTrigger.Value>-->
										<Setter Property="IsEnabled" Value="True"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBox.Style>
					</TextBox>
					<!--<custom:ConnectionStateButton Grid.Column="5" IsOpened="{Binding Path=IsRelayBoxOpened}">
						<custom:ConnectionStateButton.InputBindings>
							<MouseBinding MouseAction="LeftClick" Command="{Binding Path=RelayBoxOpenCommand}"/>
						</custom:ConnectionStateButton.InputBindings>
					</custom:ConnectionStateButton>-->
				</Grid>

				<!-- bi -->
				<Grid Grid.Row="7">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="40"/>
						<ColumnDefinition Width="110"/>
						<ColumnDefinition Width="10"/>
						<ColumnDefinition/>
						<ColumnDefinition Width="10"/>
						<ColumnDefinition Width="80"/>
					</Grid.ColumnDefinitions>

					<!--<custom:ConnectionStateEllipse IsOpened="{Binding Path=IsBIBoxOpened}"/>-->
					<TextBlock Grid.Column="1" Style="{StaticResource DeviceSettingPopupTextStyle}" Text="BI Controller"/>
					<TextBox Grid.Column="3" Text="{Binding Path=ChannelConfig.BIBoxComPort, UpdateSourceTrigger=PropertyChanged}">
						<TextBox.Style>
							<Style TargetType="{x:Type TextBox}"  >
								<Setter Property="IsEnabled" Value="False"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding Path=IsBIBoxOpened}">
										<!--<DataTrigger.Value>
											<bldef:ConnectionStates>Disconnected</bldef:ConnectionStates>
										</DataTrigger.Value>
										<Setter Property="IsEnabled" Value="True"/>-->
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBox.Style>
					</TextBox>
					<!--<custom:ConnectionStateButton Grid.Column="5" IsOpened="{Binding Path=IsBIBoxOpened}">
						<custom:ConnectionStateButton.InputBindings>
							<MouseBinding MouseAction="LeftClick" Command="{Binding Path=BIBoxOpenCommand}"/>
						</custom:ConnectionStateButton.InputBindings>
					</custom:ConnectionStateButton>-->
				</Grid>

				<!-- barcode scanner-->
				<Grid Grid.Row="9">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="40"/>
						<ColumnDefinition Width="110"/>
						<ColumnDefinition Width="10"/>
						<ColumnDefinition/>
						<ColumnDefinition Width="10"/>
						<ColumnDefinition Width="80"/>
					</Grid.ColumnDefinitions>

					<!--<custom:ConnectionStateEllipse IsOpened="{Binding Path=IsBarcodeScannerOpened}"/>-->
					<TextBlock Grid.Column="1" Style="{StaticResource DeviceSettingPopupTextStyle}" Text="Zebra Scanner"/>
					<TextBox Grid.Column="3" Text="{Binding Path=ChannelConfig.BarcodeScannerComPort, UpdateSourceTrigger=PropertyChanged}">
						<TextBox.Style>
							<Style TargetType="{x:Type TextBox}"  >
								<Setter Property="IsEnabled" Value="False"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding Path=IsBarcodeScannerOpened}">
										<!--<DataTrigger.Value>
											<bldef:ConnectionStates>Disconnected</bldef:ConnectionStates>
										</DataTrigger.Value>-->
										<Setter Property="IsEnabled" Value="True"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBox.Style>
					</TextBox>
					<!--<custom:ConnectionStateButton Grid.Column="5" IsOpened="{Binding Path=IsBarcodeScannerOpened}">
						<custom:ConnectionStateButton.InputBindings>
							<MouseBinding MouseAction="LeftClick" Command="{Binding Path=BarcodeScannerOpenCommand}"/>
						</custom:ConnectionStateButton.InputBindings>
					</custom:ConnectionStateButton>-->
				</Grid>
				
				<!-- multimeter -->
                <Grid Grid.Row="13">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="40"/>
						<ColumnDefinition Width="110"/>
						<ColumnDefinition Width="10"/>
						<ColumnDefinition/>
						<ColumnDefinition Width="10"/>
						<ColumnDefinition Width="60"/>
						<ColumnDefinition Width="10"/>
						<ColumnDefinition Width="80"/>
					</Grid.ColumnDefinitions>

					<!--<custom:ConnectionStateEllipse IsOpened="{Binding Path=IsMultimeterOpened}"/>-->
					<TextBlock Grid.Column="1" Style="{StaticResource DeviceSettingPopupTextStyle}" Text="Multimeter"/>
					<TextBox Grid.Column="3" Text="{Binding Path=ChannelConfig.MultimeterHostInfo.Host}">
						<TextBox.Style>
							<Style TargetType="{x:Type TextBox}"  >
								<Setter Property="IsEnabled" Value="False"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding Path=IsMultimeterOpened}">
										<!--<DataTrigger.Value>
											<bldef:ConnectionStates>Disconnected</bldef:ConnectionStates>
										</DataTrigger.Value>-->
										<Setter Property="IsEnabled" Value="True"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBox.Style>
					</TextBox>
					<TextBox Grid.Column="5" Text="{Binding Path=ChannelConfig.MultimeterHostInfo.Port}" PreviewTextInput="TextBox_PreviewTextInput">
						<TextBox.Style>
							<Style TargetType="{x:Type TextBox}" >
								<Setter Property="IsEnabled" Value="False"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding Path=IsMultimeterOpened}">
										<!--<DataTrigger.Value>
											<bldef:ConnectionStates>Disconnected</bldef:ConnectionStates>
										</DataTrigger.Value>-->
										<Setter Property="IsEnabled" Value="True"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBox.Style>
					</TextBox>
					<!--<custom:ConnectionStateButton Grid.Column="7" IsOpened="{Binding Path=IsMultimeterOpened}">
						<custom:ConnectionStateButton.InputBindings>
							<MouseBinding MouseAction="LeftClick" Command="{Binding Path=MultimeterOpenCommand}"/>
						</custom:ConnectionStateButton.InputBindings>
					</custom:ConnectionStateButton>-->
				</Grid>
				
				<!-- ST5520 절연저항시험기 -->
				<Grid Grid.Row="11">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="40"/>
						<ColumnDefinition Width="110"/>
						<ColumnDefinition Width="10"/>
						<ColumnDefinition/>
						<ColumnDefinition Width="10"/>
						<ColumnDefinition Width="80"/>
					</Grid.ColumnDefinitions>

					<!--<custom:ConnectionStateEllipse IsOpened="{Binding Path=IsST5520Opened}"/>-->
					<TextBlock Grid.Column="1" Style="{StaticResource DeviceSettingPopupTextStyle}" Text="절연저항시험기"/>
					<TextBox Grid.Column="3" Text="{Binding Path=ChannelConfig.ST5520ComPort, UpdateSourceTrigger=PropertyChanged}">
						<TextBox.Style>
							<Style TargetType="{x:Type TextBox}"  >
								<Setter Property="IsEnabled" Value="False"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding Path=IsST5520Opened}">
										<!--<DataTrigger.Value>
											<bldef:ConnectionStates>Disconnected</bldef:ConnectionStates>
										</DataTrigger.Value>-->
										<Setter Property="IsEnabled" Value="True"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBox.Style>
					</TextBox>
					<!--<custom:ConnectionStateButton Grid.Column="5" IsOpened="{Binding Path=IsST5520Opened}">
						<custom:ConnectionStateButton.InputBindings>
							<MouseBinding MouseAction="LeftClick" Command="{Binding Path=ST5520OpenCommand}"/>
						</custom:ConnectionStateButton.InputBindings>
					</custom:ConnectionStateButton>-->
				</Grid>
				

			</Grid>
		</Border>

		<Grid Grid.Row="6">
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition Width="140"/>
				<ColumnDefinition Width="10"/>
				<ColumnDefinition Width="140"/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>

			<Label Grid.Column="1"  Width="140" Content="저장">
				<Label.InputBindings>
					<MouseBinding MouseAction="LeftClick" Command="{Binding Path=SaveChannelConfigCommand}"/>
				</Label.InputBindings>
			</Label>
			
			<Label Grid.Column="3"   Width="140" Background="#888888" Content="닫기">
				<Label.InputBindings>
					<MouseBinding MouseAction="LeftClick" Command="{Binding Path=ChangeChannelViewPopupStateCommand}">
						<!--<MouseBinding.CommandParameter>
							<define:ChannelViewPopupStates>None</define:ChannelViewPopupStates>
						</MouseBinding.CommandParameter>-->
					</MouseBinding>
				</Label.InputBindings>
			</Label>
		</Grid>
		
	</Grid>

</UserControl>
